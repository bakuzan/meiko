// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should call onCancel when cancel button clicked 1`] = `
<dialog
  className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
  open={true}
  style={
    Object {
      "top": "calc(0px + 50vh)",
    }
  }
>
  <ForwardRef(TabTrap)
    element="div"
    isActive={true}
  >
    <div
      className="dialog__content"
    >
      <DialogContent
        isForm={true}
        name="jest"
      >
        <div
          className="dialog__content-custom"
        >
          <div>
            jest
          </div>
        </div>
        <div
          className="dialog__actions  mko_1h7ugta-actions"
        >
          <Button
            className="dialog__cancel"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            type="button"
          >
            cancel
          </Button>
        </div>
      </DialogContent>
    </div>
  </ForwardRef(TabTrap)>
</dialog>
`;

exports[`should only render title when passed 1`] = `
<dialog
  className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
  open={true}
  style={
    Object {
      "top": "calc(0px + 50vh)",
    }
  }
>
  <ForwardRef(TabTrap)
    element="div"
    isActive={true}
  >
    <div
      className="dialog__content"
    >
      <DialogContent
        isForm={true}
        name="jest"
      >
        <h4
          className="dialog__title  mko_1h7ugta-title"
        >
          jester!
        </h4>
        <div
          className="dialog__content-custom"
        >
          <div>
            jest
          </div>
        </div>
        <div
          className="dialog__actions  mko_1h7ugta-actions"
        >
          <Button
            className="dialog__action"
            onClick={[Function]}
            type="submit"
          >
            Submit
          </Button>
          <Button
            className="dialog__cancel"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            type="button"
          >
            cancel
          </Button>
        </div>
      </DialogContent>
    </div>
  </ForwardRef(TabTrap)>
</dialog>
`;

exports[`should open when passed new prop 1`] = `
<dialog
  className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
  open={true}
  style={
    Object {
      "top": "calc(0px + 50vh)",
    }
  }
>
  <ForwardRef(TabTrap)
    element="div"
    isActive={true}
  >
    <div
      className="dialog__content"
    >
      <DialogContent
        isForm={true}
        name="jest"
      >
        <div
          className="dialog__content-custom"
        >
          <div>
            jest
          </div>
        </div>
        <div
          className="dialog__actions  mko_1h7ugta-actions"
        >
          <Button
            className="dialog__cancel"
            onClick={[MockFunction]}
            type="button"
          >
            cancel
          </Button>
        </div>
      </DialogContent>
    </div>
  </ForwardRef(TabTrap)>
</dialog>
`;

exports[`should render action button and call onAction when clicked 1`] = `
<dialog
  className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
  open={true}
  style={
    Object {
      "top": "calc(0px + 50vh)",
    }
  }
>
  <ForwardRef(TabTrap)
    element="div"
    isActive={true}
  >
    <div
      className="dialog__content"
    >
      <DialogContent
        isForm={true}
        name="jest"
      >
        <div
          className="dialog__content-custom"
        >
          <div>
            jest
          </div>
        </div>
        <div
          className="dialog__actions  mko_1h7ugta-actions"
        >
          <Button
            className="dialog__action"
            onClick={[Function]}
            type="submit"
          >
            Submit
          </Button>
          <Button
            className="dialog__cancel"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            type="button"
          >
            cancel
          </Button>
        </div>
      </DialogContent>
    </div>
  </ForwardRef(TabTrap)>
</dialog>
`;

exports[`should render with minimum props 1`] = `
<dialog
  className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
  open={false}
  style={
    Object {
      "top": "calc(0px + 50vh)",
    }
  }
>
  <ForwardRef(TabTrap)
    element="div"
    isActive={false}
  >
    <div
      className="dialog__content"
    >
      <DialogContent
        isForm={true}
        name="jest"
      >
        <div
          className="dialog__content-custom"
        >
          <div>
            jest
          </div>
        </div>
        <div
          className="dialog__actions  mko_1h7ugta-actions"
        >
          <Button
            className="dialog__cancel"
            onClick={[MockFunction]}
            type="button"
          >
            cancel
          </Button>
        </div>
      </DialogContent>
    </div>
  </ForwardRef(TabTrap)>
</dialog>
`;

exports[`should replace form element with div 1`] = `
<Dialog
  actionText="Submit"
  hasBackdrop={true}
  hideCancel={false}
  isForm={false}
  isOpen={true}
  name="jest"
  onAction={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "preventDefault": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onCancel={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  style={Object {}}
>
  <dialog
    className="dialog dialog--backdrop  mko_1h7ugta-dialog  mko_1h7ugta-dialog_backdrop"
    open={true}
    style={
      Object {
        "top": "calc(0px + 50vh)",
      }
    }
  >
    <ForwardRef(TabTrap)
      element="div"
      isActive={true}
    >
      <div>
        <input
          className="tab-trap tab-trap--top  mko_1q23t0y-tabTrap"
          onFocus={[Function]}
          type="text"
        />
        <div
          className="dialog__content"
        >
          <DialogContent
            isForm={false}
            name="jest"
          >
            <div
              className="dialog-content"
            >
              <div
                className="dialog__content-custom"
              >
                <div>
                  jest
                </div>
              </div>
              <div
                className="dialog__actions  mko_1h7ugta-actions"
              >
                <Button
                  className="dialog__action"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="button ripple button--standard  mko_c5ujei-button  mko_c5ujei-button_standard dialog__action"
                    onClick={[Function]}
                    type="button"
                  >
                    Submit
                  </button>
                </Button>
                <Button
                  className="dialog__cancel"
                  onClick={
                    [MockFunction] {
                      "calls": Array [
                        Array [],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    }
                  }
                  type="button"
                >
                  <button
                    className="button ripple button--standard  mko_c5ujei-button  mko_c5ujei-button_standard dialog__cancel"
                    onClick={
                      [MockFunction] {
                        "calls": Array [
                          Array [],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      }
                    }
                    type="button"
                  >
                    cancel
                  </button>
                </Button>
              </div>
            </div>
          </DialogContent>
        </div>
        <input
          className="tab-trap tab-trap--bottom  mko_1q23t0y-tabTrap"
          onFocus={[Function]}
          type="text"
        />
      </div>
    </ForwardRef(TabTrap)>
  </dialog>
</Dialog>
`;
